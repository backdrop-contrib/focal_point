<?php

/**
 * @file
 * Install hooks for focal_point.
 */

/**
 * Implements hook_install().
 */
function focal_point_install() {
  $count = focal_point_migrate_imagefield_focus_data();

  if (!empty($count)) {
    drupal_set_message(t('Migrated the imagefield_focus data for %count. Any changes you make to imagefield_focus data from now on will not be reflected in your focal point data.', array('%count' => format_plural($count, '%count image', '%count images', array('%count' => $count)))));
  }
}

/**
 * Implements hook_uninstall().
 */
function focal_point_uninstall() {
  variable_del('focal_point_preview_image_style');
}

/**
 * Implements hook_schema().
 */
function focal_point_schema() {
  $schema['focal_point'] = array(
    'fields' => array(
      'fid' => array(
        'description' => 'File ID.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'focal_point' => array(
        'type' => 'varchar',
        'length' => 7, // The longest possible value of this is 100,100
        'not null' => TRUE,
        'default' => '',
      ),
    ),
    'primary key' => array('fid'),
  );

  return $schema;
}

/**
 * Convert existing imagefield_focus data to focal point. Return the number of
 * images that were converted or NULL.
 *
 * @param bool $overwrite
 *   If TRUE, existing focal point data will be overwritten
 *
 * @return int|NULL
 */
function focal_point_migrate_imagefield_focus_data($overwrite = FALSE) {
  if (module_exists('imagefield_focus')) {
    // Get all imagefield_focus data, calculate the center of the focus rect,
    // and use that as the new focal_point.
    $select = db_select('imagefield_focus_file', 'iff');
    if ($overwrite) {
      $select->join('focal_point', 'fp', 'iff.fid = fp.fid');
    }
    $select->addField('iff', 'fid');
    $select->addField('iff', 'focus_rect');
    $rows = $select->execute()->fetchAllAssoc('fid');

    foreach ($rows as $row) {
      $file = file_load($row->fid);
      list($x1,$y1,$x2,$y2) = explode(',', $row->focus_rect);

      $focal_point_x = $x1 + round(($x2 - $x1) / 2);
      $focal_point_y = $y1 + round(($y2 - $y1) / 2);
      $focal_point = round(100 * $focal_point_x / $file->metadata['width']) . ',' . round(100 * $focal_point_y / $file->metadata['height']);

      focal_point_save($file->fid, $focal_point);
    }

    return count($rows);
  }

  return NULL;
}
